// <auto-generated />
using System;
using Dragon.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Dragon.Data.Migrations.SqlServer
{
    [DbContext(typeof(SqlServerContext))]
    partial class SqlServerContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Dragon.Model.Configs.ComponentProperty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsGeneric")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PlatformComponentProperty");
                });

            modelBuilder.Entity("Dragon.Model.Configs.ComponentStructure", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("CanBeParent")
                        .HasColumnType("bit");

                    b.Property<bool>("IsGeneric")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PlatformComponentStructure");
                });

            modelBuilder.Entity("Dragon.Model.Configs.ComponentStructureProperty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ComponentPropertyId")
                        .HasColumnType("int");

                    b.Property<int?>("ComponentStructureId")
                        .HasColumnType("int");

                    b.Property<bool>("IsMultiple")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ComponentPropertyId");

                    b.HasIndex("ComponentStructureId");

                    b.ToTable("PlatformComponentStructureProperty");
                });

            modelBuilder.Entity("Dragon.Model.Configs.ComponentStructureSubComponent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ChildComponentId")
                        .HasColumnType("int");

                    b.Property<int?>("ParentComponentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PlatformComponentStructureSubComponent");
                });

            modelBuilder.Entity("Dragon.Model.Configs.DomainConnect", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenantCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ConfigDomainConnect");
                });

            modelBuilder.Entity("Dragon.Model.Configs.DomainSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BrandName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contact")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DomainConnectId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LogoUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tagline")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Website")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DomainConnectId");

                    b.ToTable("ConfigDomainSetting");
                });

            modelBuilder.Entity("Dragon.Model.Configs.KeyGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsGeneric")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PlatformKeyGroup");
                });

            modelBuilder.Entity("Dragon.Model.Configs.KeyStore", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("KeyGroupId")
                        .HasColumnType("int");

                    b.Property<string>("SubValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("KeyGroupId");

                    b.ToTable("PlatformKeyStore");
                });

            modelBuilder.Entity("Dragon.Model.Configs.Navigation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Icon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ParentNavigationId")
                        .HasColumnType("int");

                    b.Property<int>("SortIndex")
                        .HasColumnType("int");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ParentNavigationId");

                    b.ToTable("PlatformNavigation");
                });

            modelBuilder.Entity("Dragon.Model.Configs.Structure", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ComponentStructureId")
                        .HasColumnType("int");

                    b.Property<string>("Identifier")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ShortIndex")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComponentStructureId");

                    b.ToTable("PlatformStructure");
                });

            modelBuilder.Entity("Dragon.Model.Configs.StructureProperty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ComponentStructurePropertyId")
                        .HasColumnType("int");

                    b.Property<int?>("StructureId")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ComponentStructurePropertyId");

                    b.HasIndex("StructureId");

                    b.ToTable("PlatformStructureProperty");
                });

            modelBuilder.Entity("Dragon.Model.Configs.StructurePropertyToStructure", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ChildStructureId")
                        .HasColumnType("int");

                    b.Property<int?>("StructurePropertyId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PlatformStructurePropertyToStructure");
                });

            modelBuilder.Entity("Dragon.Model.Configs.StructureSubStructure", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ChildStructureId")
                        .HasColumnType("int");

                    b.Property<int?>("ParentStructureId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PlatformStructureSubStructure");
                });

            modelBuilder.Entity("Dragon.Model.Configs.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUniversal")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("UserTypeId");

                    b.ToTable("PlatformUser");
                });

            modelBuilder.Entity("Dragon.Model.Configs.UserNavigation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsCreate")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEdit")
                        .HasColumnType("bit");

                    b.Property<bool>("IsView")
                        .HasColumnType("bit");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("PlatformUserNavigation");
                });

            modelBuilder.Entity("Dragon.Model.Configs.UserType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("PlatformUserType");
                });

            modelBuilder.Entity("Dragon.Model.Configs.UserTypeNavigation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsCreate")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEdit")
                        .HasColumnType("bit");

                    b.Property<bool>("IsView")
                        .HasColumnType("bit");

                    b.Property<int>("UserTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserTypeId");

                    b.ToTable("PlatformUserTypeNavigation");
                });

            modelBuilder.Entity("Dragon.Model.SubSystems.HrmsCompany", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AddressLine1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressLine2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GroupCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GstNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsSelf")
                        .HasColumnType("bit");

                    b.Property<string>("LutArn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pancard")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pincode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Proprietor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("HrmsCompany");
                });

            modelBuilder.Entity("Dragon.Model.SubSystems.HrmsCompanyBank", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccountType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("Iban")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IfscCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SwiftCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("HrmsCompanyBank");
                });

            modelBuilder.Entity("Dragon.Model.SubSystems.HrmsCompanyDepartment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("HrmsCompanyDepartment");
                });

            modelBuilder.Entity("Dragon.Model.SubSystems.HrmsCompanyInvoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<float>("CgstAmount")
                        .HasColumnType("real");

                    b.Property<float>("CgstPercentage")
                        .HasColumnType("real");

                    b.Property<int?>("FromCompanyId")
                        .HasColumnType("int");

                    b.Property<bool>("InternationalInvoice")
                        .HasColumnType("bit");

                    b.Property<DateTime>("InvoiceDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InvoiceNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentTerms")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("SameStateInvoice")
                        .HasColumnType("bit");

                    b.Property<float>("SgstAmount")
                        .HasColumnType("real");

                    b.Property<float>("SgstPercentage")
                        .HasColumnType("real");

                    b.Property<float>("TaxAmount")
                        .HasColumnType("real");

                    b.Property<float>("TaxPercentage")
                        .HasColumnType("real");

                    b.Property<int?>("ToCompanyId")
                        .HasColumnType("int");

                    b.Property<float>("Total")
                        .HasColumnType("real");

                    b.Property<string>("TotalInWords")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FromCompanyId");

                    b.HasIndex("ToCompanyId");

                    b.ToTable("HrmsCompanyInvoice");
                });

            modelBuilder.Entity("Dragon.Model.SubSystems.HrmsCompanyInvoiceService", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<float>("Amount")
                        .HasColumnType("real");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InvoiceId")
                        .HasColumnType("int");

                    b.Property<float>("RatePerMonth")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("InvoiceId");

                    b.ToTable("HrmsCompanyInvoiceService");
                });

            modelBuilder.Entity("Dragon.Model.SubSystems.HrmsEmployee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AddressLine1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressLine2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ConfirmationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ContactNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Ctc")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Designation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsFullTime")
                        .HasColumnType("bit");

                    b.Property<bool>("IsGenerateDocuments")
                        .HasColumnType("bit");

                    b.Property<DateTime>("JoiningDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pancard")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pincode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfileUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RelievingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Salutation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("HrmsEmployee");
                });

            modelBuilder.Entity("Dragon.Model.SubSystems.HrmsEmployeeAppraisal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AppraisalDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("RevisedCtc")
                        .HasColumnType("int");

                    b.Property<string>("RevisedDesignation")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("HrmsEmployeeAppraisal");
                });

            modelBuilder.Entity("Dragon.Model.SubSystems.HrmsEmployeeBank", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccountType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("Iban")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IfscCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SwiftCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("HrmsEmployeeBank");
                });

            modelBuilder.Entity("Dragon.Model.SubSystems.HrmsEmployeeDocument", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DocumentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocumentUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("Number")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("HrmsEmployeeDocument");
                });

            modelBuilder.Entity("Dragon.Model.SubSystems.HrmsEmployeePunching", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PunchTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("PunchType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("HrmsEmployeePunching");
                });

            modelBuilder.Entity("Dragon.Model.SubSystems.HrmsEmployeeSalary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Bonus")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("FixSalary")
                        .HasColumnType("int");

                    b.Property<int>("Leaves")
                        .HasColumnType("int");

                    b.Property<int>("WorkingDays")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("HrmsEmployeeSalary");
                });

            modelBuilder.Entity("Dragon.Provider.ConnectionProvider+Connection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Database")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<byte>("DatabaseType")
                        .HasColumnType("tinyint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("Port")
                        .HasColumnType("int");

                    b.Property<string>("Server")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TenantCode")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("User")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("ConfigConnection");
                });

            modelBuilder.Entity("Dragon.Provider.EmailConfig", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("EnableSsl")
                        .HasColumnType("bit");

                    b.Property<string>("HostUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<string>("NetKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NetPassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Port")
                        .HasColumnType("int");

                    b.Property<string>("SenderEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SenderName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ConfigEmailConfig");
                });

            modelBuilder.Entity("Dragon.Model.Configs.ComponentStructureProperty", b =>
                {
                    b.HasOne("Dragon.Model.Configs.ComponentProperty", "ComponentProperty")
                        .WithMany()
                        .HasForeignKey("ComponentPropertyId");

                    b.HasOne("Dragon.Model.Configs.ComponentStructure", "ComponentStructure")
                        .WithMany("Properties")
                        .HasForeignKey("ComponentStructureId");

                    b.Navigation("ComponentProperty");

                    b.Navigation("ComponentStructure");
                });

            modelBuilder.Entity("Dragon.Model.Configs.DomainSetting", b =>
                {
                    b.HasOne("Dragon.Model.Configs.DomainConnect", "DomainConnect")
                        .WithMany()
                        .HasForeignKey("DomainConnectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DomainConnect");
                });

            modelBuilder.Entity("Dragon.Model.Configs.KeyStore", b =>
                {
                    b.HasOne("Dragon.Model.Configs.KeyGroup", "KeyGroup")
                        .WithMany("KeyStore")
                        .HasForeignKey("KeyGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KeyGroup");
                });

            modelBuilder.Entity("Dragon.Model.Configs.Navigation", b =>
                {
                    b.HasOne("Dragon.Model.Configs.Navigation", "ParentNavigation")
                        .WithMany("ChildItems")
                        .HasForeignKey("ParentNavigationId");

                    b.Navigation("ParentNavigation");
                });

            modelBuilder.Entity("Dragon.Model.Configs.Structure", b =>
                {
                    b.HasOne("Dragon.Model.Configs.ComponentStructure", "ComponentStructure")
                        .WithMany()
                        .HasForeignKey("ComponentStructureId");

                    b.Navigation("ComponentStructure");
                });

            modelBuilder.Entity("Dragon.Model.Configs.StructureProperty", b =>
                {
                    b.HasOne("Dragon.Model.Configs.ComponentStructureProperty", "ComponentStructureProperty")
                        .WithMany()
                        .HasForeignKey("ComponentStructurePropertyId");

                    b.HasOne("Dragon.Model.Configs.Structure", null)
                        .WithMany("Properties")
                        .HasForeignKey("StructureId");

                    b.Navigation("ComponentStructureProperty");
                });

            modelBuilder.Entity("Dragon.Model.Configs.User", b =>
                {
                    b.HasOne("Dragon.Model.Configs.UserType", "UserType")
                        .WithMany()
                        .HasForeignKey("UserTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserType");
                });

            modelBuilder.Entity("Dragon.Model.Configs.UserNavigation", b =>
                {
                    b.HasOne("Dragon.Model.Configs.User", "Users")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Dragon.Model.Configs.UserTypeNavigation", b =>
                {
                    b.HasOne("Dragon.Model.Configs.UserType", "UserTypes")
                        .WithMany()
                        .HasForeignKey("UserTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserTypes");
                });

            modelBuilder.Entity("Dragon.Model.SubSystems.HrmsCompanyBank", b =>
                {
                    b.HasOne("Dragon.Model.SubSystems.HrmsCompany", "Company")
                        .WithMany("Bank")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("Dragon.Model.SubSystems.HrmsCompanyDepartment", b =>
                {
                    b.HasOne("Dragon.Model.SubSystems.HrmsCompany", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("Dragon.Model.SubSystems.HrmsCompanyInvoice", b =>
                {
                    b.HasOne("Dragon.Model.SubSystems.HrmsCompany", "FromCompany")
                        .WithMany()
                        .HasForeignKey("FromCompanyId");

                    b.HasOne("Dragon.Model.SubSystems.HrmsCompany", "ToCompany")
                        .WithMany()
                        .HasForeignKey("ToCompanyId");

                    b.Navigation("FromCompany");

                    b.Navigation("ToCompany");
                });

            modelBuilder.Entity("Dragon.Model.SubSystems.HrmsCompanyInvoiceService", b =>
                {
                    b.HasOne("Dragon.Model.SubSystems.HrmsCompanyInvoice", "Invoice")
                        .WithMany("Services")
                        .HasForeignKey("InvoiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Invoice");
                });

            modelBuilder.Entity("Dragon.Model.SubSystems.HrmsEmployee", b =>
                {
                    b.HasOne("Dragon.Model.SubSystems.HrmsCompanyDepartment", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentId");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("Dragon.Model.SubSystems.HrmsEmployeeAppraisal", b =>
                {
                    b.HasOne("Dragon.Model.SubSystems.HrmsEmployee", "Employee")
                        .WithMany("Appraisals")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Dragon.Model.SubSystems.HrmsEmployeeBank", b =>
                {
                    b.HasOne("Dragon.Model.SubSystems.HrmsEmployee", "Employee")
                        .WithMany("Banks")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Dragon.Model.SubSystems.HrmsEmployeeDocument", b =>
                {
                    b.HasOne("Dragon.Model.SubSystems.HrmsEmployee", "Employee")
                        .WithMany("Documents")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Dragon.Model.SubSystems.HrmsEmployeePunching", b =>
                {
                    b.HasOne("Dragon.Model.SubSystems.HrmsEmployee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Dragon.Model.SubSystems.HrmsEmployeeSalary", b =>
                {
                    b.HasOne("Dragon.Model.SubSystems.HrmsEmployee", "Employee")
                        .WithMany("Salaries")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Dragon.Model.Configs.ComponentStructure", b =>
                {
                    b.Navigation("Properties");
                });

            modelBuilder.Entity("Dragon.Model.Configs.KeyGroup", b =>
                {
                    b.Navigation("KeyStore");
                });

            modelBuilder.Entity("Dragon.Model.Configs.Navigation", b =>
                {
                    b.Navigation("ChildItems");
                });

            modelBuilder.Entity("Dragon.Model.Configs.Structure", b =>
                {
                    b.Navigation("Properties");
                });

            modelBuilder.Entity("Dragon.Model.SubSystems.HrmsCompany", b =>
                {
                    b.Navigation("Bank");
                });

            modelBuilder.Entity("Dragon.Model.SubSystems.HrmsCompanyDepartment", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("Dragon.Model.SubSystems.HrmsCompanyInvoice", b =>
                {
                    b.Navigation("Services");
                });

            modelBuilder.Entity("Dragon.Model.SubSystems.HrmsEmployee", b =>
                {
                    b.Navigation("Appraisals");

                    b.Navigation("Banks");

                    b.Navigation("Documents");

                    b.Navigation("Salaries");
                });
#pragma warning restore 612, 618
        }
    }
}
